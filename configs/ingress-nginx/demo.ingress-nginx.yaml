# An example Ingress that makes use of the controller:
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo
  namespace: default
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: alb-ingress # creates ALB
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip # use "ip" with VPC CNI, use "instance" with Calico CNI and NodePort service
    # ingress.class is unnecessary when .spec.ingressClassName stanza is specified
    #kubernetes.io/ingress.class: "alb"
    kubernetes.io/ingress.allow-http: "true"

spec:
  # ingressClassName: nginx
  ingressClassName: alb
  rules:
    - host: www.demo.io
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                # NOTE: use NodePort service when ingress-nginx is configured in host networked mode
                name: demo
                port:
                  number: 80
            path: /
  # This section is only required if TLS is to be enabled for the Ingress
  # tls:
  #   - hosts:
  #     - www.example.com
  #     secretName: example-tls

# If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

# apiVersion: v1
# kind: Secret
# metadata:
#   name: example-tls
#   namespace: foo
# data:
#   tls.crt: <base64 encoded cert>
#   tls.key: <base64 encoded key>
# type: kubernetes.io/tls